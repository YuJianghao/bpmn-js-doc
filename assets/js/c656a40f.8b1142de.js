"use strict";(self.webpackChunkbpmn_js_doc=self.webpackChunkbpmn_js_doc||[]).push([[642],{9613:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>b});var r=t(9496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(t),u=o,b=m["".concat(c,".").concat(u)]||m[u]||d[u]||a;return t?r.createElement(b,i(i({ref:n},s),{},{components:t})):r.createElement(b,i({ref:n},s))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6387:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(5882),o=(t(9496),t(9613));const a={sidebar_position:3},i="model",l={unversionedId:"diagram-js/model",id:"diagram-js/model",title:"model",description:"model \u5b9a\u4e49\u4e86\u7ed8\u56fe\u7528\u5230\u7684 Element\uff0c\u6211\u79f0\u4e4b\u4e3a GraphElement\uff0c\u662f JavaScript \u5bf9\u8c61\u3002\u540e\u671f\u8fd8\u4f1a\u6709 ModdleElement\u3001GraphicsElement\uff0c\u8981\u6ce8\u610f\u533a\u5206\u3002",source:"@site/docs/diagram-js/model.md",sourceDirName:"diagram-js",slug:"/diagram-js/model",permalink:"/bpmn-js-doc/docs/diagram-js/model",draft:!1,editUrl:"https://github.com/YuJianghao/bpmn-js-doc/tree/main/docs/diagram-js/model.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"EventBus",permalink:"/bpmn-js-doc/docs/diagram-js/event-bus"},next:{title:"BaseRenderer",permalink:"/bpmn-js-doc/docs/diagram-js/base-renderer"}},c={},p=[],s={toc:p};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"model"},"model"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"model")," \u5b9a\u4e49\u4e86\u7ed8\u56fe\u7528\u5230\u7684 Element\uff0c\u6211\u79f0\u4e4b\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphElement"),"\uff0c\u662f JavaScript \u5bf9\u8c61\u3002\u540e\u671f\u8fd8\u4f1a\u6709 ",(0,o.kt)("inlineCode",{parentName:"p"},"ModdleElement"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"GraphicsElement"),"\uff0c\u8981\u6ce8\u610f\u533a\u5206\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'declare module "diagram-js/lib/model" {\n  export class Base {\n    businessObject: any\n    label: Label\n    parent: Shape\n    labels: Label[]\n    outgoing: Connection[]\n    incoming: Connection[]\n  }\n  export class Shape extends Base {\n    children: GraphElement[]\n    host: Shape\n    attachers: Shape\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  export class Root extends Shape {\n    children: GraphElement[]\n  }\n  export class Label extends Base {\n    labelTarget: GraphElement\n  }\n  export class Connection extends Base {\n    source: GraphElement\n    target: GraphElement\n    waypoints?: {\n      x: number\n      y: number\n      original?: {\n        x: number\n        y: number\n      }\n    }[]\n  }\n\n  export type GraphElement = Shape | Root | Label | Connection\n\n  /**\n   * Creates a new model element of the specified type\n   */\n  export function create(\n    type: "connection",\n    attrs: Record<string, unknown>\n  ): Connection\n  export function create(type: "label", attrs: Record<string, unknown>): Label\n  export function create(type: "shape", attrs: Record<string, unknown>): Shape\n  export function create(type: "root", attrs: Record<string, unknown>): Root\n}\n')))}m.isMDXComponent=!0}}]);